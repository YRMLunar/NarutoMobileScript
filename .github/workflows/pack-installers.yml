name: Release Full Build

on:
  push:
    tags:
      - 'v*'  # 当推送带有 v 前缀的标签时触发，如 v1.0.0

permissions:
  contents: write  # 允许工作流创建发布和上传资产

jobs:
  build-and-release:
    runs-on: windows-latest  # 使用 Windows 环境以兼容 7-Zip

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 16  # 根据项目需求选择 Node 版本

      - name: Install dependencies
        run: npm ci  # 安装项目依赖

      - name: Build project
        run: npm run build  # 执行项目构建命令

      - name: Install 7-Zip
        run: choco install -y 7zip.commandline  # 安装 7-Zip

      - name: Create full.7z archive
        shell: pwsh
        run: |
          $version = "${{ github.ref_name }}" -replace '^v', ''  # 从标签名提取版本号
          $appName = "NarutoScript"
          $archiveName = "${appName}_${version}_full.7z"
          
          # 创建包含完整构建的目录
          mkdir -p dist/full-build
          Copy-Item -Path "build/*" -Destination "dist/full-build/" -Recurse
          
          # 使用 7-Zip 创建压缩包
          7z a "$archiveName" "dist/full-build/*" -t7z -mx=9  # -mx=9 表示最高压缩级别

      - name: Create GitHub release
        id: create_release
        uses: actions/create-release@v1
        with:
          tag_name: ${{ github.ref_name }}
          release_name: ${{ github.ref_name }}
          draft: false
          prerelease: false

      - name: Upload full.7z to release
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./${{ env.APPNAME }}_${{ env.VERSION }}_full.7z
          asset_name: ${{ env.APPNAME }}_${{ env.VERSION }}_full.7z
          asset_content_type: application/x-7z-compressed